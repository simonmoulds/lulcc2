% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.PredictiveModelList}
\alias{predict.PredictiveModelList}
\title{Predict allocation suitability}
\usage{
\method{predict}{PredictiveModelList}(object, newdata,
  data.frame = FALSE, ...)
}
\arguments{
\item{object}{a PredictiveModelList object}

\item{newdata}{data.frame containing new data}

\item{data.frame}{logical indicating whether the function should return a
matrix (default) or data.frame}

\item{\dots}{additional arguments to \code{predict} methods}
}
\value{
A matrix.
}
\description{
Estimate allocation suitability with predictive models.
}
\details{
This function is usually called from \code{allocate} to calculate land use
suitability at each timestep. However, it may also be used to produce
suitability maps (see examples).
}
\examples{

\dontrun{

## Plum Island Ecosystems

lu <- DiscreteLulcRasterStack(x=stack(pie[1:3]),
                              categories=c(1,2,3),
                              labels=c("Forest","Built","Other"),
                              t=c(0,6,14))

idx <- data.frame(var=c("ef_001","ef_002","ef_003"),
                  yr=c(0,0,0),
                  dynamic=c(FALSE,FALSE,FALSE))
ef <- ExpVarRasterStack(x=stack(pie[4:6]), index=idx)

part <- partition(x=lu, size=0.1, spatial=TRUE, t=0)
train.data <- getPredictiveModelInputData(lu=lu,
                                          ef=ef,
                                          cells=part[["train"]],
                                          t=0)

forest.form <- as.formula("Forest ~ ef_001 + ef_002")
built.form <- as.formula("Built ~ ef_001 + ef_002 + ef_003")
other.form <- as.formula("Other ~ ef_001 + ef_002")

forest.glm <- glm(forest.form, family=binomial, data=train.data)
built.glm <- glm(built.form, family=binomial, data=train.data)
other.glm <- glm(other.form, family=binomial, data=train.data)
glm.mods <- PredictiveModelList(list(forest.glm, built.glm, other.glm),
                                categories=lu@categories,
                                labels=lu@labels)

all.data <- as.data.frame(x=ef, cells=part[["all"]]) 
probmaps <- predict(object=glm.mods, 
                    newdata=all.data, 
                    data.frame=TRUE) 

points <- rasterToPoints(lu[[1]], spatial=TRUE) 
probmaps <- SpatialPointsDataFrame(points, probmaps) 
probmaps <- rasterize(x=probmaps, y=lu[[1]], 
                      field=names(probmaps))
plot(probmaps)

}

}
\seealso{
\code{\link[stats]{predict}}, \code{\link{allocate}}
}
